apply plugin: 'base'

def VERSION = '0.2.4-SNAPSHOT'

allprojects { project ->

    // --------------------------------
    // Increment version for deployment
    // --------------------------------

    version = '$VERSION'

    apply plugin: 'eclipse'
    apply plugin: 'idea'

    repositories {
        maven { url 'http://repo1.maven.org/maven2/' }
        maven { url 'http://www.ibiblio.org/maven2/' }
        flatDir { dirs "${project.rootDir}/lib/" }
    }

    buildscript {
        repositories {
            maven { url 'http://repo1.maven.org/maven2/' }
            maven { url 'http://www.ibiblio.org/maven2/' }
            maven { url "${project.rootDir}/lib" }
        }
    }
}

def javaProjects = [':core',
                    ':dao',
                    ':domain',
                    ':tx',
                    ':tx-guice'
                    ].collect { project it };

configure (javaProjects) { project ->
    //apply plugin: 'checkstyle'
    //apply plugin: 'findbugs'
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'


    dependencies {
        testCompile 'org.testng:testng:6.1.1'
        compile "com.google.code.findbugs:jsr305:1.3.9",
                "postgresql:postgresql:8.3-603.jdbc4",
                'org.slf4j:slf4j-api:1.5.10'
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    publishing {
        publications {
            jar(MavenPublication) {
                from components.java

                groupId 'com.freiheit'
                artifactId "sqlapi4j-${project.name}"
                version "${VERSION}"
            }

            source(MavenPublication) {
                from components.java

                groupId 'com.freiheit'
                artifactId "sqlapi4j-${project.name}"
                version "${VERSION}"

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
        repositories {
            maven {
                  url "${project.rootDir}/build"
            }
        }
    }
}
